@page "/signin"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Frontend.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager


<PageTitle>Sign in</PageTitle>
<section class="signin">
   <div class="container">
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">
                    @ErrorMessage
                </div>
            }
        <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
            <DataAnnotationsValidator />

            <h1>Welcome Back</h1>
            <p>Don't have an account yet? <a href="/signup">Sign up here</a></p>
            <div class="form-content">
                <div class="input-group">
                    <label for="email" class="form-label">Email</label>
                    <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                </div>
                <div class="input-group">
                    <label for="password" class="form-label">Password</label>
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                </div>
                <div class="remember-group">
                    <label class="form-label">
                        <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />
                        Remember me
                    </label>
                </div>
                <div class="button-size">
                    <button type="submit" class="btn-theme"><i class="fa-regular fa-arrow-left-to-bracket"></i>Sign In</button>
                </div>
                <div class="forgot-password">
                    <a href="/forgot-password">Forgot Password?</a>
                </div>
            </div>

       </EditForm>
   </div>

</section>

@code {
    private string? ErrorMessage { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        // This doesn't count login failures towards account lockout
        // To enable password failures to trigger account lockout, set lockoutOnFailure: true
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/Account/Details" ?? "/");
        }
        else
        {
            ErrorMessage = "Error: Invalid login attempt.";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
